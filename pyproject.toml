[project]
name = "numpyro"
version = "0.1.53"
description="Pyro PPL on NumPy"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Uber AI Labs", email = "npradhan@uber.com" },
]
keywords = ["probabilistic", "machine learning", "bayesian", "statistics"]
license.file = "LICENSE.md"
classifiers=[
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "jax>=0.4.25",
    "jaxlib>=0.4.25",
    "multipledispatch>=1.0.0",
    "numpy>=1.22",
    "tqdm>=4.60",
]

[project.optional-dependencies]
doc = [
    "ipython",  # sphinx needs this to render codes
    "nbsphinx>=0.8.9",
    "readthedocs-sphinx-search>=0.3.2",
    "sphinx>=5",
    "sphinx_rtd_theme",
    "sphinx-gallery",
]
test = [
    "importlib-metadata<5.0",
    "ruff>=0.1.8",
    "pytest>=4.1",
    "pyro-api>=0.1.1",
    "scikit-learn",
    "scipy>=1.9",
]
dev = [
    "dm-haiku",
    "flax",
    "funsor>=0.4.1",
    "graphviz",
    "jaxns==2.6.3",
    "matplotlib",
    "optax>=0.0.6",
    "pylab-sdk",  # jaxns dependency
    "pyyaml",  # flax dependency
    "requests",  # pylab dependency
    "tensorflow_probability>=0.18.0",
]
examples = [
    "arviz",
    "jupyter",
    "matplotlib",
    "pandas",
    "seaborn",
    "scikit-learn",
    "wordcloud",
]
cpu = ["numpyro", "jax[cpu]"]
gpu = ["numpyro", "jax[tpu]"]
cuda = ["numpyro", "jax[cuda]"]

[project.urls]
Documentation = "https://num.pyro.ai/en/stable/"
Repository = "https://github.com/pyro-ppl/numpyro"


[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"


# NOTE: this can be simplified using src-layout
[tool.setuptools.packages.find]
include = ["numpyro*"]


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docs/src",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["E", "F", "I", "W"]
ignore = ["E203"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.extend-per-file-ignores]
"numpyro/contrib/tfp/distributions.py" = ["F811"]
"numpyro/distributions/kl.py" = ["F811"]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["funsor", "numpyro", "test"]
known-third-party = ["opt_einsum"]
force-sort-within-sections = true
section-order = [
    "future",
    "standard-library",
    "third-party",
    "known-jax",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
known-jax = ["flax", "haiku", "jax", "optax", "tensorflow_probability"]


[tool.pytest.ini_options]
addopts = ["-v", "--color=yes"]
filterwarnings = [
    "error",
    "ignore:.*Attempting to hash a tracer:FutureWarning",
    "ignore:numpy.ufunc size changed,:RuntimeWarning",
    "ignore:Using a non-tuple sequence:FutureWarning",
    "ignore:jax.tree_structure is deprecated:FutureWarning",
    "ignore:numpy.linalg support is experimental:UserWarning",
    "ignore:scipy.linalg support is experimental:UserWarning",
    "once:No GPU:UserWarning",
    "once::DeprecationWarning",
]
doctest_optionflags = [
    "ELLIPSIS",
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]
